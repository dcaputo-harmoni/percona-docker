FROM rockylinux:8 AS pxc_builder

RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    yum install -y git jemalloc jemalloc-devel && \
    yum clean all

RUN mkdir /build
RUN mkdir /src
RUN git clone --branch=PXC-4469-sst-clone --depth=1 https://github.com/Tusamarco/percona-xtradb-cluster.git /src
#ADD . /src

WORKDIR /src
RUN git submodule update --init --recursive
RUN ./build-ps/pxc_builder.sh --install_deps=1 --builddir=/build
RUN yum install -y gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-binutils gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-plugin-gcc rpcgen

WORKDIR /build
RUN cmake /src/ \
    -DCMAKE_INSTALL_PREFIX=/opt/mysql_templates/pxc-8.0.36 \
    -DDOWNLOAD_BOOST=1 \
    -DENABLED_LOCAL_INFILE=1 \
    -DWITH_DEBUG=0 \
    -DWITH_INNODB_EXTRA_DEBUG=0 \
    -DWITH_INNODB_MEMCACHED=0 \
    -DWITH_FEDERATED_STORAGE_ENGINE=0 \
    -DWITH_ARCHIVE_STORAGE_ENGINE=0 \
    -DWITH_JEMALLOC=1 \
    -DWITH_PACKAGE_FLAGS=OFF \
    -DWITHOUT_ROCKSDB=ON \
    -DWITH_BOOST=/opt/boost

RUN make -j 10
RUN make install

FROM golang:1.22 AS go_builder

RUN git clone --branch=main https://github.com/percona/percona-xtradb-cluster-operator.git /go/src/github.com/percona/percona-xtradb-cluster-operator/
WORKDIR /go/src/github.com/percona/percona-xtradb-cluster-operator/cmd/peer-list
RUN go build


FROM redhat/ubi8-minimal

# Please don't remove old-style LABEL since it's needed for RedHat certification
LABEL name="Percona XtraBackup" \
      release="8.0" \
      vendor="Percona" \
      summary="Percona XtraBackup is an open-source hot backup utility for MySQL - based servers that doesnâ€™t lock your database during the backup" \
      description="Percona XtraBackup works with MySQL, MariaDB, and Percona Server. It supports completely non-blocking backups of InnoDB, XtraDB, and HailDB storage engines. In addition, it can back up the following storage engines by briefly pausing writes at the end of the backup: MyISAM, Merge, and Archive, including partitioned tables, triggers, and database options." \
      maintainer="Percona Development <info@percona.com>"

LABEL org.opencontainers.image.title="Percona XtraDB Cluster"
LABEL org.opencontainers.image.vendor="Percona"
LABEL org.opencontainers.image.description="Percona XtraDB Cluster is a high availability solution that \
helps enterprises avoid downtime and outages and meet expected customer experience."
LABEL org.opencontainers.image.license="GPL"

ENV PXC_VERSION 8.0.37-29.1
ENV PXC_REPO release
ENV OS_VER el8
ENV FULL_PERCONA_XTRADBCLUSTER_VERSION "$PXC_VERSION.$OS_VER"
LABEL org.label-schema.schema-version=${PXC_VERSION}
LABEL org.opencontainers.image.version=${PXC_VERSION}

# Do not report during Docker image creation.
ARG PERCONA_TELEMETRY_DISABLE=1

# check repository package signature in secure way
RUN set -ex; \
    export GNUPGHOME="$(mktemp -d)"; \
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 76FD3DB13AB67410B89DB10E82562EA9AD986DA3 4D1BB29D63D98E422B2113B19334A25F8507EFA5 99DB70FAE1D7CE227FB6488205B555B38483C65D 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 BC5EDDCADF502C077F1582882AE81E8ACED7258B; \
    gpg --batch --export --armor 4D1BB29D63D98E422B2113B19334A25F8507EFA5 > ${GNUPGHOME}/PERCONA-PACKAGING-KEY; \
    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \
    gpg --batch --export --armor 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 > ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \
    gpg --batch --export --armor BC5EDDCADF502C077F1582882AE81E8ACED7258B > ${GNUPGHOME}/RPM-GPG-KEY-AlmaLinux; \
    gpg --batch --export --armor 76FD3DB13AB67410B89DB10E82562EA9AD986DA3 > ${GNUPGHOME}/RPM-GPG-KEY-oracle; \
    rpmkeys --import ${GNUPGHOME}/PERCONA-PACKAGING-KEY ${GNUPGHOME}/RPM-GPG-KEY-centosofficial ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8 ${GNUPGHOME}/RPM-GPG-KEY-AlmaLinux ${GNUPGHOME}/RPM-GPG-KEY-oracle; \
    microdnf install -y findutils; \
    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \
    rpmkeys --checksig /tmp/percona-release.rpm; \
    rpm -i /tmp/percona-release.rpm; \
    rm -rf "$GNUPGHOME" /tmp/percona-release.rpm; \
    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY; \
    percona-release enable pdpxc-8.0 ${PXC_REPO}

RUN set -ex; \
    curl -Lf -o /tmp/libev.rpm http://vault.centos.org/centos/8/AppStream/x86_64/os/Packages/libev-4.24-6.el8.x86_64.rpm; \
    curl -Lf -o /tmp/pv.rpm http://download.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/p/pv-1.6.6-7.el8.x86_64.rpm; \
    rpmkeys --checksig /tmp/libev.rpm /tmp/pv.rpm; \
    rpm -i /tmp/libev.rpm /tmp/pv.rpm; \
    rm -rf /tmp/libev.rpm /tmp/pv.rpm

RUN set -ex; \
    rpm -e --nodeps tzdata; \
    microdnf install -y \
        jemalloc \
        openssl \
        shadow-utils \
        hostname \
        curl \
        jq \
        numactl-libs \
        socat \
        krb5-libs \
        tzdata \
        diffutils \
        iproute \
        libaio \
        which \
        pam \
        procps-ng \
        tar \
        nc \
        cracklib-dicts; \
    microdnf clean all; \
    rm -rf /var/cache/dnf /var/cache/yum

# create mysql user/group before mysql installation
RUN groupadd -g 1001 mysql; \
    useradd -u 1001 -r -g 1001 -s /sbin/nologin \
        -c "Default Application User" mysql

RUN set -ex; \
    ln -s /etc/mysql/conf.d /etc/my.cnf.d; \
    rm -f /etc/percona-xtradb-cluster.conf.d/*.cnf; \
    echo '!include /etc/mysql/node.cnf' > /etc/my.cnf; \
    echo '!includedir /etc/my.cnf.d/' >> /etc/my.cnf; \
    echo '!includedir /etc/percona-xtradb-cluster.conf.d/' >> /etc/my.cnf

RUN mkdir /usr/lib64/galera4

COPY dockerdir /
COPY --from=go_builder /go/src/github.com/percona/percona-xtradb-cluster-operator/cmd/peer-list /usr/bin/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/lib/ /usr/lib64/mysql/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/bin/ /usr/bin/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/lib/ /usr/lib/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/lib/libgalera_smm.so /usr/lib/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/lib/libgalera_smm.so /usr/lib64/galera4/
COPY --from=pxc_builder /opt/mysql_templates/pxc-8.0.36/share/ /usr/share/mysql/
COPY --from=pxc_builder /usr/lib64/libjemalloc.so /usr/lib64/libjemalloc.so.2 /usr/lib64/
RUN mkdir -p /etc/mysql/conf.d/ /var/log/mysql /var/lib/mysql /docker-entrypoint-initdb.d /etc/percona-xtradb-cluster.conf.d; \
    chown -R 1001:1001 /etc/mysql/ /var/log/mysql /var/lib/mysql /docker-entrypoint-initdb.d /etc/percona-xtradb-cluster.conf.d; \
    chmod -R g=u /etc/mysql/ /var/log/mysql /var/lib/mysql /docker-entrypoint-initdb.d /etc/percona-xtradb-cluster.conf.d

ADD https://raw.githubusercontent.com/Percona-Lab/telemetry-agent/phase-0/call-home.sh /call-home.sh
RUN chmod a+rx /call-home.sh
RUN mkdir -p /usr/local/percona
RUN chown mysql:mysql /usr/local/percona
ENV CALL_HOME_OPTIONAL_PARAMS=" -s ${OS_VER}-openshift"

USER 1001

VOLUME ["/var/lib/mysql", "/var/log/mysql"]

ENTRYPOINT ["/entrypoint.sh"]

EXPOSE 3306 4567 4568 33060
CMD ["mysqld"]
